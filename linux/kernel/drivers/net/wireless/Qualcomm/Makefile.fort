# Build list

targetList := drivers drivers_firmware
targetList += wpa_supplicant hostapd rootfs_build 

default: ${targetList}

export SIGMADUT_TOPDIR=${ATH_TOPDIR}/apps/sigma-dut
#################################################################################################################################
export ROOTFS_PATH=${ATH_TOPDIR}/rootfs-${BOARD_TYPE}.build
export WLAN_DRIVER_TOPDIR=$(ATH_TOPDIR)/drivers
export ATHDIAG_TOPDIR=${ATH_TOPDIR}/drivers/qcacld-new/tools/athdiag
export BSP_PATCH_FILE_TOPDIR=${WLAN_DRIVER_TOPDIR}/patches/android_x86_M

#################################################################################################################################
#
# custom patch
custom_patch_rome:
	@echo Patch drivers
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0001-cfg80211-Add-AP-stopped-interface.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0002-cfg80211-Reset-beacon-interval-when-stop-AP-fails.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0003-Revert-cfg80211-mac80211-disconnect-on-suspend.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0004-cfg80211-Add-new-wiphy-flag-WIPHY_FLAG_DFS_OFFLOAD.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0005-cfg80211-export-regulatory_hint_user-API.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0006-mac80211-implement-HS2.0-gratuitous-ARP-unsolicited.patch
	cp ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt  ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt.old
	cp -rf ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0007-add-db.txt  ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt
	#@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0008-backports-kconf-fix.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0009-cld-fix.patch
	#@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0010-cld-ini.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/925-fix-sap-11nght20-with-VHT-IE.patch

custom_unpatch_rome:
	@echo Revert drivers patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/925-fix-sap-11nght20-with-VHT-IE.patch
	#@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0010-cld-ini.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0009-cld-fix.patch
	#@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0008-backports-kconf-fix.patch
	cp -rf ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt.old ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0006-mac80211-implement-HS2.0-gratuitous-ARP-unsolicited.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0005-cfg80211-export-regulatory_hint_user-API.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0004-cfg80211-Add-new-wiphy-flag-WIPHY_FLAG_DFS_OFFLOAD.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0003-Revert-cfg80211-mac80211-disconnect-on-suspend.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0002-cfg80211-Reset-beacon-interval-when-stop-AP-fails.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0001-cfg80211-Add-AP-stopped-interface.patch

custom_patch_rome_arm:
	@echo Patch drivers
	#@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/1001-cfg80211-arm.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0001-cfg80211-Add-AP-stopped-interface.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0002-cfg80211-Reset-beacon-interval-when-stop-AP-fails.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0003-Revert-cfg80211-mac80211-disconnect-on-suspend.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0004-cfg80211-Add-new-wiphy-flag-WIPHY_FLAG_DFS_OFFLOAD.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0005-cfg80211-export-regulatory_hint_user-API.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0006-mac80211-implement-HS2.0-gratuitous-ARP-unsolicited.patch
	cp ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt  ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt.old
	cp -rf ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0007-add-db.txt  ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0008-backports-kconf-fix.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/1002-cld-arm.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/1003-cld-arm-sdio-irq.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0010-cld-ini.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0011-backports-remove-bit_wait.patch

custom_unpatch_rome_arm:
	@echo Revert drivers patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0011-backports-remove-bit_wait.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0010-cld-ini.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/1003-cld-arm-sdio-irq.patch
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/1002-cld-arm.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0008-backports-kconf-fix.patch
	cp -rf ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt.old ${WLAN_DRIVER_TOPDIR}/backports/net/wireless/db.txt
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0006-mac80211-implement-HS2.0-gratuitous-ARP-unsolicited.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0005-cfg80211-export-regulatory_hint_user-API.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0004-cfg80211-Add-new-wiphy-flag-WIPHY_FLAG_DFS_OFFLOAD.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0003-Revert-cfg80211-mac80211-disconnect-on-suspend.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0002-cfg80211-Reset-beacon-interval-when-stop-AP-fails.patch
	@cd ${WLAN_DRIVER_TOPDIR}/backports && patch -R -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/0001-cfg80211-Add-AP-stopped-interface.patch

#################################################################################################################################
#
# Sigma-DUT package
#
sigmadut_build: rootfs_prep sigmadut_clean
	@echo Build Sigma-DUT
	cd $(SIGMADUT_TOPDIR) && \
	${MAKEARCH} && \
	cp $(SIGMADUT_TOPDIR)/sigma_dut $(INSTALL_ROOT)/sbin

sigmadut_clean:
	@echo Clean Sigma-DUT
	cd $(SIGMADUT_TOPDIR) && \
	${MAKEARCH} clean

#################################################################################################################################

#
# athdiag
#
athdiag_build: rootfs_prep athdiag_clean
	@echo Build athdiag tool
	cd $(ATHDIAG_TOPDIR) && \
	${MAKEARCH} && \
	cp $(ATHDIAG_TOPDIR)/athdiag $(INSTALL_ROOT)/sbin

athdiag_clean:
	@echo Clean athdiag tool
	cd $(ATHDIAG_TOPDIR) && \
	${MAKEARCH} clean
#
# strip wlan module & copy binary files to Android-x86 project
#
copy_binary:
	@echo Strip Unneeded for WLAN Module first
	cd ${ROOTFS_PATH}/lib/modules && ${CROSS_COMPILE}strip --strip-unneeded wlan.ko
	@echo Copy BINARY to Android-x86 project
	cp ${ROOTFS_PATH}/lib/modules/* ${ANDROID_X86_PROJ_VENDOR_PATH} 
	cp -rf ${ROOTFS_PATH}/lib/firmware/WLAN-firmware/*  ${ANDROID_X86_PROJ_WLANFW_PATH} 
	mkdir -p ${ANDROID_X86_PROJ_BTFW_PATH}
	cp ${ROOTFS_PATH}/lib/firmware/BT-firmware/* ${ANDROID_X86_PROJ_BTFW_PATH}
	@echo Copy BINARY DONE!

copy_bsp_patch:
	@echo Copy PATCH files to Android-x86 BSP
	cp ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/BT/* ${ANDROID_X86_PROJ_PATH}
	cp ${BSP_PATCH_FILE_TOPDIR}/WLAN/* ${ANDROID_X86_PROJ_PATH}
	@echo Copy PATCH DONE!

prepare:
	@echo Copy Platform files to Android-x86 BSP
	cp -rf ${PLATFORM_PATCH_FILE_TOPDIR}/android-x86_defconfig   ${ANDROID_X86_PROJ_PATH}/kernel/arch/x86/configs/android-x86_defconfig

